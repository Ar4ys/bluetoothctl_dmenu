#!/bin/bash
dmenu_list_mode="-l 10"
backend="bluetoothctl"
connected_device=""
scan_result=[]

#check whether bluetoothctl is installed and is working correctly
is_bluetoothctl_installed_correctly() {
	if [[ $($backend -v) == bluetoothctl* &&
	$($backend power on) == "Changing power on succeeded" &&
	$($backend list) == Controller* ]]; then
		echo $backend 'is installed and configured correctly'
	fi
}

get_already_paired_devices() {
	IFS=
	echo $($backend paired-devices);
}

print_connected_devices() {
	while read -r _ mac name; do
		if [[ $($backend info $mac | grep "Connected: yes") ]]; then
			printf "$name | $mac\n"
		fi
	done < <(get_already_paired_devices)
}

print_paired_devices() {
	while read -r _ mac name; do
			printf "$name | $mac\n"
	done < <(get_already_paired_devices)
}

connect_device() {
	$backend connect $2 && (
	echo $2 '(connected)';
	$connected_device="hello"
	);
	echo $connected_device;
}


disconnect_all_devices() {
	$($backend disconnect);
}

scan_for_devices() {
	echo 'Scan for devices';
}

create_options() {
	local device_info

	if [[ $($backend info $mac | grep "$1") ]]; then
		submenu_options+="$2 "
	else
		submenu_options+="$3 "
	fi
}

open_device_submenu() {
	local submenu_options
	local name
	local mac
	local option
	submenu_options=""
	name=$(echo "$1" | cut -d "|" -f 1)
	mac=$(echo "$1" | cut -d "|" -f 2)

	create_options "Connected: yes" "disconnect" "connect" 
	create_options "Trusted: yes" "untrust" "trust"
	create_options "Blocked: yes" "unblock" "block"
	create_options "Paired: yes" "remove" "pair"

	read -r connect trust block pair < <(echo "$options")
	option=$(printf "%s\n" $connect $trust $block $pair | dmenu -p "$name")
	[[ $option ]] || exit 1
}

get_main_menu() {
	echo -e "connected\npaired\nscan"
}

open_main_menu() {
	local submenu
	local device
	submenu=$(get_main_menu | dmenu -p "btmenu";)
	[[ $submenu ]] || exit 1

	if [[ $submenu == "connected" ]]; then
		device=$(print_connected_devices | dmenu -p "connected" $dmenu_list_mode)
		[[ $device ]] || exit 1
		open_device_submenu "$device"
	elif [[ $submenu == "paired" ]]; then
		device=$(print_paired_devices | dmenu -p "paired" $dmenu_list_mode)
		[[ $device ]] || exit 1
		open_device_submenu "$device"
	fi
}

open_main_menu

#connect_device $(get_already_paired_devices | dmenu);